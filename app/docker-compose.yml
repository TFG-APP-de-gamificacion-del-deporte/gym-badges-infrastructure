services:

  gym-badge-api:
    image: jmoyonero/tfg-gym-badges-api:${GYM_BADGES_API_VERSION}
    container_name: gym-badge-api
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
      CLOUDSQL_CONNECTION_NAME: ${CLOUDSQL_CONNECTION_NAME}
      CLOUDSQL_USER: ${CLOUDSQL_USER}
      CLOUDSQL_PASSWORD: ${CLOUDSQL_PASSWORD}
      CLOUDSQL_DB: ${CLOUDSQL_DB}
    restart: unless-stopped
    networks:
      - docker-network
    labels:
      traefik.enable: true
      traefik.http.routers.tfg-api.entrypoints: web
      traefik.http.routers.tfg-api.rule: Host(`api.${DOMAIN?err}`)
      traefik.http.routers.tfg-api.middlewares: redirect
      traefik.http.routers.tfg-api-secure.entrypoints: websecure
      traefik.http.routers.tfg-api-secure.rule: Host(`api.${DOMAIN?err}`)
      traefik.http.routers.tfg-api-secure.tls: true
      traefik.http.routers.tfg-api-secure.tls.certresolver: ${DOMAIN?err}
      traefik.http.services.tfg-api-secure.loadbalancer.server.port: 8080

  gym-badge-web-app:
    image: diegorevenga/gym-badges-web-app:${GYM_BADGES_WEB_APP_VERSION}
    container_name: gym-badge-web-app
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TIMEZONE}
      API_URL: ${API_URL}
      VERSION: 'test'
    restart: unless-stopped
    networks:
      - docker-network
    labels:
      traefik.enable: true
      traefik.http.routers.tfg-web.entrypoints: web
      traefik.http.routers.tfg-web.rule: Host(`www.${DOMAIN?err}`)
      traefik.http.routers.tfg-web.middlewares: redirect
      traefik.http.routers.tfg-web-secure.entrypoints: websecure
      traefik.http.routers.tfg-web-secure.rule: Host(`www.${DOMAIN?err}`)
      traefik.http.routers.tfg-web-secure.tls: true
      traefik.http.routers.tfg-web-secure.tls.certresolver: ${DOMAIN?err}
      traefik.http.services.tfg-web-secure.loadbalancer.server.port: 3000

networks:
  docker-network:
    external: true